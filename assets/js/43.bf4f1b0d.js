(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{479:function(t,a,e){"use strict";e.r(a);var s=e(2),r=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据"}},[t._v("#")]),t._v(" 数据")]),t._v(" "),a("p",[t._v("数据类型列表")]),t._v(" "),a("h2",{attrs:{id:"书籍分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#书籍分类"}},[t._v("#")]),t._v(" 书籍分类")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('class NovelCategory:\n    category: str = "" # 分类名字\n    category_int: int = 1 # 分类的 id\n    sub_category : str = "" # 子分类名字\n    sub_category_int : int = 1 # 子分类 id\n    sort_number: int = 1 # 分类显示顺序\n    sub_sort_number: int = 1 # 子分类显示顺序\n    language:str = "" # 什么语言的分类\n')])])]),a("p",[t._v("关于分类信息通过 "),a("code",[t._v("init")]),t._v(" 接口获得，在 book 数据中，存储的是 "),a("code",[t._v("category_int")]),t._v("，所以，前段需要根据 "),a("code",[t._v("category_int")]),t._v(" 值根据 "),a("code",[t._v("/init")]),t._v(" 接口返回的信息，获知这本书是什么类别。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("属性")]),t._v(" "),a("th",[t._v("类型")]),t._v(" "),a("th",[t._v("描述")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("sub_category_int")]),t._v(" "),a("td",[t._v("int")]),t._v(" "),a("td",[t._v("长度一共8位"),a("br"),t._v(" - 前 3 位是语言类型，从100开始，中 2 位是该语言下的一级分类，后3位是一次分类下的二级分类")])])])]),t._v(" "),a("h2",{attrs:{id:"书籍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#书籍"}},[t._v("#")]),t._v(" 书籍")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('class Book:\n    title: str = "" # 书籍名字\n    author: str = "" # 作者\n    up_id: str = "" # 上传者 ID\n    language: str = "" # 语言\n    book64: str = "" # 书籍 ID\n    subbook64: str = "" # 书籍真实 ID\n    description: str = "" # 书籍描述\n    cover_url: str = "" # 书籍封面\n    categories: int = 0 # 书籍的章节数量\n    category_int: int = -1 # 书籍的分类 ID\n    status: str = "" # 书籍状态\n    chapters: list[str] = None # 书籍的章节标题\n    created_at: datetime = ""\n    updated_at: datetime = ""\n')])])]),a("p",[t._v("假设一个书籍名字为《遮天》，那么 book64 就是这本书的唯一 ID，但是，这本书可以有多个版本，比如不同语言的版本，不同上传者的版本。")]),t._v(" "),a("p",[t._v("那么，每一个版本对应的 id 就是 subbook64，识别一本书的唯一 id 也是通过 subbook64")]),t._v(" "),a("h2",{attrs:{id:"章节"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#章节"}},[t._v("#")]),t._v(" 章节")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('class NovelChapter:\n    subbook64: str = "" # 和 book 中 subbook64 是对应的\n    title: str = "" # 本章的名字\n    content: str = "" # 本章的内容\n    sort_number: int = 0 # 章节正序的下标\n    chapter_title: str = "" # 卷名\n    chapter_number: int = 0 # 卷的下标\n    word_count: int = 0  # 字数\n    created_at: datetime = ""\n    updated_at: datetime = ""\n')])])]),a("p",[t._v("这里说一下卷名，一本书可能分为好几个卷，所以 "),a("code",[t._v("chapter_title")]),t._v(" 表示的是本卷的名字，而 "),a("code",[t._v("chapter_number")]),t._v(" 表示的是，在这个卷中，章节正序的下标")])])}),[],!1,null,null,null);a.default=r.exports}}]);